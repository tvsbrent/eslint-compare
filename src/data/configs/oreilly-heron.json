{
  "accessor-pairs": "off",
  "array-callback-return": "error",
  "block-scoped-var": "error",
  "complexity": ["off", 11],
  "class-methods-use-this": [
    "off",
    {
      "exceptMethods": [
        "render",
        "getInitialState",
        "getDefaultProps",
        "getChildContext",
        "componentWillMount",
        "componentDidMount",
        "componentWillReceiveProps",
        "shouldComponentUpdate",
        "componentWillUpdate",
        "componentDidUpdate",
        "componentWillUnmount"
      ]
    }
  ],
  "consistent-return": "error",
  "curly": ["error", "multi-line"],
  "default-case": [
    "off",
    {
      "commentPattern": "^no default$"
    }
  ],
  "dot-notation": [
    "error",
    {
      "allowKeywords": true
    }
  ],
  "dot-location": ["error", "property"],
  "eqeqeq": [
    "error",
    "always",
    {
      "null": "ignore"
    }
  ],
  "guard-for-in": "error",
  "no-alert": "warn",
  "no-caller": "error",
  "no-case-declarations": "off",
  "no-div-regex": "off",
  "no-else-return": "off",
  "no-empty-function": [
    "error",
    {
      "allow": ["arrowFunctions", "functions", "methods"]
    }
  ],
  "no-empty-pattern": "error",
  "no-eq-null": "off",
  "no-eval": "error",
  "no-extend-native": "error",
  "no-extra-bind": "error",
  "no-extra-label": "error",
  "no-fallthrough": "error",
  "no-floating-decimal": "error",
  "no-global-assign": [
    "error",
    {
      "exceptions": []
    }
  ],
  "no-native-reassign": "off",
  "no-implicit-coercion": [
    "off",
    {
      "boolean": false,
      "number": true,
      "string": true,
      "allow": []
    }
  ],
  "no-implicit-globals": "off",
  "no-implied-eval": "error",
  "no-invalid-this": "off",
  "no-iterator": "error",
  "no-labels": [
    "error",
    {
      "allowLoop": false,
      "allowSwitch": false
    }
  ],
  "no-lone-blocks": "error",
  "no-loop-func": "error",
  "no-magic-numbers": [
    "off",
    {
      "ignore": [],
      "ignoreArrayIndexes": true,
      "enforceConst": true,
      "detectObjects": false
    }
  ],
  "no-multi-spaces": ["error", {}],
  "no-multi-str": "error",
  "no-new": "error",
  "no-new-func": "error",
  "no-new-wrappers": "error",
  "no-octal": "error",
  "no-octal-escape": "error",
  "no-param-reassign": [
    "error",
    {
      "props": true,
      "ignorePropertyModificationsFor": [
        "acc",
        "e",
        "ctx",
        "req",
        "request",
        "res",
        "response",
        "$scope"
      ]
    }
  ],
  "no-proto": "error",
  "no-redeclare": "error",
  "no-restricted-properties": [
    "error",
    {
      "object": "arguments",
      "property": "callee",
      "message": "arguments.callee is deprecated"
    },
    {
      "property": "__defineGetter__",
      "message": "Please use Object.defineProperty instead."
    },
    {
      "property": "__defineSetter__",
      "message": "Please use Object.defineProperty instead."
    },
    {
      "object": "Math",
      "property": "pow",
      "message": "Use the exponentiation operator (**) instead."
    }
  ],
  "no-return-assign": ["off", "always"],
  "no-return-await": "error",
  "no-script-url": "error",
  "no-self-assign": "error",
  "no-self-compare": "error",
  "no-sequences": "error",
  "no-throw-literal": "error",
  "no-unmodified-loop-condition": "off",
  "no-unused-expressions": [
    "error",
    {
      "allowShortCircuit": false,
      "allowTernary": false,
      "allowTaggedTemplates": false
    }
  ],
  "no-unused-labels": "error",
  "no-useless-call": "off",
  "no-useless-concat": "error",
  "no-useless-escape": "error",
  "no-useless-return": "off",
  "no-void": "error",
  "no-warning-comments": [
    "off",
    {
      "terms": ["todo", "fixme", "xxx"],
      "location": "start"
    }
  ],
  "no-with": "error",
  "prefer-promise-reject-errors": [
    "off",
    {
      "allowEmptyReject": true
    }
  ],
  "radix": "warn",
  "require-await": "off",
  "vars-on-top": "error",
  "wrap-iife": [
    "error",
    "outside",
    {
      "functionPrototypeMethods": false
    }
  ],
  "yoda": "error",
  "comma-dangle": [
    "off",
    {
      "arrays": "always-multiline",
      "objects": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "functions": "always-multiline"
    }
  ],
  "for-direction": "off",
  "getter-return": [
    "off",
    {
      "allowImplicit": true
    }
  ],
  "no-await-in-loop": "error",
  "no-compare-neg-zero": "off",
  "no-cond-assign": ["error", "always"],
  "no-console": "warn",
  "no-constant-condition": "warn",
  "no-control-regex": "error",
  "no-debugger": "error",
  "no-dupe-args": "error",
  "no-dupe-keys": "error",
  "no-duplicate-case": "error",
  "no-empty": "off",
  "no-empty-character-class": "error",
  "no-ex-assign": "error",
  "no-extra-boolean-cast": "error",
  "no-extra-parens": [
    "off",
    "all",
    {
      "conditionalAssign": true,
      "nestedBinaryExpressions": false,
      "returnAssign": false,
      "ignoreJSX": "all",
      "enforceForArrowConditionals": false
    }
  ],
  "no-extra-semi": "error",
  "no-func-assign": "error",
  "no-inner-declarations": "error",
  "no-invalid-regexp": "error",
  "no-irregular-whitespace": "error",
  "no-obj-calls": "error",
  "no-prototype-builtins": "error",
  "no-regex-spaces": "error",
  "no-sparse-arrays": "error",
  "no-template-curly-in-string": "error",
  "no-unexpected-multiline": "error",
  "no-unreachable": "error",
  "no-unsafe-finally": "error",
  "no-unsafe-negation": "error",
  "no-negated-in-lhs": "off",
  "use-isnan": "error",
  "valid-jsdoc": "off",
  "valid-typeof": [
    "error",
    {
      "requireStringLiterals": true
    }
  ],
  "callback-return": "off",
  "global-require": "error",
  "handle-callback-err": "off",
  "no-buffer-constructor": "off",
  "no-mixed-requires": ["off", false],
  "no-new-require": "error",
  "no-path-concat": "error",
  "no-process-env": "off",
  "no-process-exit": "off",
  "no-restricted-modules": "off",
  "no-sync": "off",
  "array-bracket-newline": [
    "off",
    {
      "multiline": true,
      "minItems": 3
    }
  ],
  "array-element-newline": [
    "off",
    {
      "multiline": true,
      "minItems": 3
    }
  ],
  "array-bracket-spacing": ["off", "never"],
  "block-spacing": ["error", "always"],
  "brace-style": [
    "off",
    "1tbs",
    {
      "allowSingleLine": true
    }
  ],
  "camelcase": [
    "error",
    {
      "properties": "never"
    }
  ],
  "capitalized-comments": [
    "off",
    "never",
    {
      "line": {
        "ignorePattern": ".*",
        "ignoreInlineComments": true,
        "ignoreConsecutiveComments": true
      },
      "block": {
        "ignorePattern": ".*",
        "ignoreInlineComments": true,
        "ignoreConsecutiveComments": true
      }
    }
  ],
  "comma-spacing": [
    "error",
    {
      "before": false,
      "after": true
    }
  ],
  "comma-style": ["error", "last"],
  "computed-property-spacing": ["error", "never"],
  "consistent-this": "off",
  "eol-last": ["warn", "always"],
  "func-call-spacing": ["error", "never"],
  "func-name-matching": [
    "off",
    "always",
    {
      "includeCommonJSModuleExports": false
    }
  ],
  "func-names": "off",
  "func-style": ["off", "expression"],
  "id-blacklist": "off",
  "id-length": "off",
  "id-match": "off",
  "indent": [
    "off",
    2,
    {
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      "FunctionDeclaration": {
        "parameters": 1,
        "body": 1
      },
      "FunctionExpression": {
        "parameters": 1,
        "body": 1
      }
    }
  ],
  "jsx-quotes": ["off", "prefer-double"],
  "key-spacing": [
    "error",
    {
      "beforeColon": false,
      "afterColon": true
    }
  ],
  "keyword-spacing": [
    "off",
    {
      "before": true,
      "after": true,
      "overrides": {
        "return": {
          "after": true
        },
        "throw": {
          "after": true
        },
        "case": {
          "after": true
        }
      }
    }
  ],
  "line-comment-position": [
    "off",
    {
      "position": "above",
      "ignorePattern": "",
      "applyDefaultPatterns": true
    }
  ],
  "linebreak-style": ["error", "unix"],
  "lines-around-comment": "off",
  "lines-around-directive": [
    "error",
    {
      "before": "always",
      "after": "always"
    }
  ],
  "max-depth": ["off", 4],
  "max-len": [
    "off",
    100,
    2,
    {
      "ignoreUrls": true,
      "ignoreComments": false,
      "ignoreRegExpLiterals": true,
      "ignoreStrings": true,
      "ignoreTemplateLiterals": true
    }
  ],
  "max-lines": [
    "off",
    {
      "max": 300,
      "skipBlankLines": true,
      "skipComments": true
    }
  ],
  "max-nested-callbacks": "off",
  "max-params": ["off", 3],
  "max-statements": ["off", 10],
  "max-statements-per-line": [
    "off",
    {
      "max": 1
    }
  ],
  "multiline-ternary": ["off", "never"],
  "new-cap": [
    "error",
    {
      "newIsCap": true,
      "newIsCapExceptions": [],
      "capIsNew": false,
      "capIsNewExceptions": ["Immutable.Map", "Immutable.Set", "Immutable.List"]
    }
  ],
  "new-parens": "error",
  "newline-after-var": "off",
  "newline-before-return": "off",
  "newline-per-chained-call": [
    "error",
    {
      "ignoreChainWithDepth": 4
    }
  ],
  "no-array-constructor": "error",
  "no-bitwise": "error",
  "no-continue": "error",
  "no-inline-comments": "off",
  "no-lonely-if": "error",
  "no-mixed-operators": [
    "off",
    {
      "groups": [
        ["+", "-", "*", "/", "%", "**"],
        ["&", "|", "^", "~", "<<", ">>", ">>>"],
        ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
        ["&&", "||"],
        ["in", "instanceof"]
      ],
      "allowSamePrecedence": false
    }
  ],
  "no-mixed-spaces-and-tabs": "error",
  "no-multi-assign": ["error"],
  "no-multiple-empty-lines": [
    "off",
    {
      "max": 2,
      "maxEOF": 1
    }
  ],
  "no-negated-condition": "off",
  "no-nested-ternary": "error",
  "no-new-object": "error",
  "no-plusplus": "error",
  "no-restricted-syntax": [
    "error",
    {
      "selector": "ForInStatement",
      "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
    },
    {
      "selector": "ForOfStatement",
      "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
    },
    {
      "selector": "LabeledStatement",
      "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
    },
    {
      "selector": "WithStatement",
      "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
    }
  ],
  "no-spaced-func": "error",
  "no-tabs": "off",
  "no-ternary": "off",
  "no-trailing-spaces": [
    "off",
    {
      "skipBlankLines": false
    }
  ],
  "no-underscore-dangle": [
    "off",
    {
      "allow": [],
      "allowAfterThis": false,
      "allowAfterSuper": false
    }
  ],
  "no-unneeded-ternary": [
    "error",
    {
      "defaultAssignment": false
    }
  ],
  "no-whitespace-before-property": "error",
  "nonblock-statement-body-position": "off",
  "object-curly-spacing": ["off", "always"],
  "object-curly-newline": [
    "off",
    {
      "ObjectExpression": {
        "minProperties": 3,
        "multiline": true,
        "consistent": true
      },
      "ObjectPattern": {
        "minProperties": 3,
        "multiline": true,
        "consistent": true
      }
    }
  ],
  "object-property-newline": [
    "error",
    {
      "allowMultiplePropertiesPerLine": true
    }
  ],
  "one-var": ["off", "never"],
  "one-var-declaration-per-line": ["error", "always"],
  "operator-assignment": ["error", "always"],
  "operator-linebreak": "off",
  "padded-blocks": ["off", "never"],
  "padding-line-between-statements": "off",
  "quote-props": [
    "off",
    "as-needed",
    {
      "keywords": false,
      "unnecessary": true,
      "numbers": false
    }
  ],
  "quotes": [
    "off",
    "single",
    {
      "avoidEscape": true
    }
  ],
  "require-jsdoc": "off",
  "semi": ["off", "always"],
  "semi-spacing": [
    "off",
    {
      "before": false,
      "after": true
    }
  ],
  "semi-style": ["off", "last"],
  "sort-keys": [
    "off",
    "asc",
    {
      "caseSensitive": false,
      "natural": true
    }
  ],
  "sort-vars": "off",
  "space-before-blocks": "error",
  "space-before-function-paren": [
    "off",
    {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }
  ],
  "space-in-parens": ["error", "never"],
  "space-infix-ops": "off",
  "space-unary-ops": [
    "error",
    {
      "words": true,
      "nonwords": false,
      "overrides": {}
    }
  ],
  "spaced-comment": [
    "off",
    "always",
    {
      "line": {
        "exceptions": ["-", "+"],
        "markers": ["=", "!"]
      },
      "block": {
        "exceptions": ["-", "+"],
        "markers": ["=", "!"],
        "balanced": true
      }
    }
  ],
  "switch-colon-spacing": [
    "off",
    {
      "after": true,
      "before": false
    }
  ],
  "template-tag-spacing": ["off", "never"],
  "unicode-bom": ["error", "never"],
  "wrap-regex": "off",
  "init-declarations": "off",
  "no-catch-shadow": "off",
  "no-delete-var": "error",
  "no-label-var": "error",
  "no-restricted-globals": [
    "off",
    "addEventListener",
    "blur",
    "close",
    "closed",
    "confirm",
    "defaultStatus",
    "event",
    "external",
    "defaultstatus",
    "find",
    "focus",
    "frameElement",
    "frames",
    "history",
    "innerHeight",
    "innerWidth",
    "length",
    "location",
    "locationbar",
    "menubar",
    "moveBy",
    "moveTo",
    "name",
    "onblur",
    "onerror",
    "onfocus",
    "onload",
    "onresize",
    "onunload",
    "open",
    "opener",
    "opera",
    "outerHeight",
    "outerWidth",
    "pageXOffset",
    "pageYOffset",
    "parent",
    "print",
    "removeEventListener",
    "resizeBy",
    "resizeTo",
    "screen",
    "screenLeft",
    "screenTop",
    "screenX",
    "screenY",
    "scroll",
    "scrollbars",
    "scrollBy",
    "scrollTo",
    "scrollX",
    "scrollY",
    "self",
    "status",
    "statusbar",
    "stop",
    "toolbar",
    "top"
  ],
  "no-shadow": "error",
  "no-shadow-restricted-names": "error",
  "no-undef": "off",
  "no-undef-init": "error",
  "no-undefined": "off",
  "no-unused-vars": [
    "error",
    {
      "vars": "all",
      "args": "after-used",
      "ignoreRestSiblings": true
    }
  ],
  "no-use-before-define": [
    "error",
    {
      "functions": true,
      "classes": true,
      "variables": true
    }
  ],
  "arrow-body-style": [
    "off",
    "as-needed",
    {
      "requireReturnForObjectLiteral": false
    }
  ],
  "arrow-parens": [
    "off",
    "as-needed",
    {
      "requireForBlockBody": true
    }
  ],
  "arrow-spacing": [
    "error",
    {
      "before": true,
      "after": true
    }
  ],
  "constructor-super": "error",
  "generator-star-spacing": [
    "error",
    {
      "before": false,
      "after": true
    }
  ],
  "no-class-assign": "error",
  "no-confusing-arrow": [
    "error",
    {
      "allowParens": true
    }
  ],
  "no-const-assign": "error",
  "no-dupe-class-members": "error",
  "no-duplicate-imports": "error",
  "no-new-symbol": "error",
  "no-restricted-imports": "off",
  "no-this-before-super": "error",
  "no-useless-computed-key": "error",
  "no-useless-constructor": "off",
  "no-useless-rename": [
    "error",
    {
      "ignoreDestructuring": false,
      "ignoreImport": false,
      "ignoreExport": false
    }
  ],
  "no-var": "off",
  "object-shorthand": [
    "error",
    "always",
    {
      "ignoreConstructors": false,
      "avoidQuotes": true
    }
  ],
  "prefer-arrow-callback": [
    "off",
    {
      "allowNamedFunctions": false,
      "allowUnboundThis": true
    }
  ],
  "prefer-const": [
    "error",
    {
      "destructuring": "any",
      "ignoreReadBeforeAssign": true
    }
  ],
  "prefer-destructuring": [
    "off",
    {
      "VariableDeclarator": {
        "array": false,
        "object": true
      },
      "AssignmentExpression": {
        "array": true,
        "object": true
      }
    },
    {
      "enforceForRenamedProperties": false
    }
  ],
  "prefer-numeric-literals": "error",
  "prefer-reflect": "off",
  "prefer-rest-params": "error",
  "prefer-spread": "error",
  "prefer-template": "error",
  "require-yield": "error",
  "rest-spread-spacing": ["error", "never"],
  "sort-imports": [
    "off",
    {
      "ignoreCase": false,
      "ignoreMemberSort": false,
      "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
    }
  ],
  "symbol-description": "error",
  "template-curly-spacing": "error",
  "yield-star-spacing": ["error", "after"],
  "import/no-unresolved": [
    "off",
    {
      "commonjs": true,
      "caseSensitive": true
    }
  ],
  "import/named": "off",
  "import/default": "off",
  "import/namespace": "off",
  "import/export": "error",
  "import/no-named-as-default": "error",
  "import/no-named-as-default-member": "error",
  "import/no-deprecated": "off",
  "import/no-extraneous-dependencies": [
    "off",
    {
      "devDependencies": [
        "test/**",
        "tests/**",
        "spec/**",
        "**/__tests__/**",
        "test.{js,jsx}",
        "test-*.{js,jsx}",
        "**/*.{test,spec}.{js,jsx}",
        "**/jest.config.js",
        "**/webpack.config.js",
        "**/webpack.config.*.js",
        "**/rollup.config.js",
        "**/rollup.config.*.js",
        "**/gulpfile.js",
        "**/gulpfile.*.js",
        "**/Gruntfile{,.js}",
        "**/protractor.conf.*.js"
      ],
      "optionalDependencies": false
    }
  ],
  "import/no-mutable-exports": "error",
  "import/no-commonjs": "off",
  "import/no-amd": "error",
  "import/no-nodejs-modules": "off",
  "import/first": ["error", "absolute-first"],
  "import/imports-first": "off",
  "import/no-duplicates": "error",
  "import/no-namespace": "off",
  "import/extensions": [
    "off",
    "always",
    {
      "js": "never",
      "jsx": "never"
    }
  ],
  "import/order": [
    "off",
    {
      "groups": [
        "builtin",
        "external",
        "internal",
        "parent",
        "sibling",
        "index"
      ],
      "newlines-between": "never"
    }
  ],
  "import/newline-after-import": "off",
  "import/prefer-default-export": "error",
  "import/no-restricted-paths": "off",
  "import/max-dependencies": [
    "off",
    {
      "max": 10
    }
  ],
  "import/no-absolute-path": "error",
  "import/no-dynamic-require": "error",
  "import/no-internal-modules": [
    "off",
    {
      "allow": []
    }
  ],
  "import/unambiguous": "off",
  "import/no-webpack-loader-syntax": "error",
  "import/no-unassigned-import": "off",
  "import/no-named-default": "error",
  "import/no-anonymous-default-export": [
    "off",
    {
      "allowArray": false,
      "allowArrowFunction": false,
      "allowAnonymousClass": false,
      "allowAnonymousFunction": false,
      "allowLiteral": false,
      "allowObject": false
    }
  ],
  "strict": ["error", "never"],
  "react/display-name": [
    "off",
    {
      "ignoreTranspilerName": false
    }
  ],
  "react/forbid-prop-types": [
    "error",
    {
      "forbid": ["any", "array", "object"]
    }
  ],
  "react/jsx-boolean-value": ["off", "never"],
  "react/jsx-closing-bracket-location": ["off", "line-aligned"],
  "react/jsx-curly-spacing": [
    "off",
    "never",
    {
      "allowMultiline": true
    }
  ],
  "react/jsx-handler-names": [
    "off",
    {
      "eventHandlerPrefix": "handle",
      "eventHandlerPropPrefix": "on"
    }
  ],
  "react/jsx-indent-props": ["off", 2],
  "react/jsx-key": "off",
  "react/jsx-max-props-per-line": [
    "off",
    {
      "maximum": 1
    }
  ],
  "react/jsx-no-bind": [
    "off",
    {
      "ignoreRefs": true,
      "allowArrowFunctions": true,
      "allowBind": false
    }
  ],
  "react/jsx-no-duplicate-props": [
    "error",
    {
      "ignoreCase": true
    }
  ],
  "react/jsx-no-literals": "off",
  "react/jsx-no-undef": "error",
  "react/jsx-pascal-case": [
    "error",
    {
      "allowAllCaps": true,
      "ignore": []
    }
  ],
  "react/sort-prop-types": [
    "off",
    {
      "ignoreCase": true,
      "callbacksLast": false,
      "requiredFirst": false
    }
  ],
  "react/jsx-sort-prop-types": "off",
  "react/jsx-sort-props": [
    "off",
    {
      "ignoreCase": true,
      "callbacksLast": false,
      "shorthandFirst": false,
      "shorthandLast": false
    }
  ],
  "react/jsx-uses-react": ["error"],
  "react/jsx-uses-vars": "error",
  "react/no-danger": "warn",
  "react/no-deprecated": ["error"],
  "react/no-did-mount-set-state": ["error"],
  "react/no-did-update-set-state": ["error"],
  "react/no-direct-mutation-state": "off",
  "react/no-is-mounted": "error",
  "react/no-multi-comp": [
    "off",
    {
      "ignoreStateless": true
    }
  ],
  "react/no-set-state": "off",
  "react/no-string-refs": "off",
  "react/no-unknown-property": "error",
  "react/prefer-es6-class": ["error", "always"],
  "react/prefer-stateless-function": "error",
  "react/prop-types": [
    "error",
    {
      "ignore": [],
      "customValidators": []
    }
  ],
  "react/react-in-jsx-scope": "error",
  "react/require-extension": [
    "off",
    {
      "extensions": [".jsx", ".js"]
    }
  ],
  "react/require-render-return": "error",
  "react/self-closing-comp": "off",
  "react/jsx-space-before-closing": ["off", "always"],
  "react/sort-comp": [
    "off",
    {
      "order": [
        "static-methods",
        "lifecycle",
        "/^on.+$/",
        "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
        "everything-else",
        "/^render.+$/",
        "render"
      ]
    }
  ],
  "react/jsx-wrap-multilines": [
    "error",
    {
      "declaration": true,
      "assignment": true,
      "return": true
    }
  ],
  "react/wrap-multilines": "off",
  "react/jsx-first-prop-new-line": ["off", "multiline"],
  "react/jsx-equals-spacing": ["off", "never"],
  "react/jsx-indent": ["off", 2],
  "react/jsx-no-target-blank": "error",
  "react/jsx-filename-extension": [
    "off",
    {
      "extensions": [".jsx"]
    }
  ],
  "react/jsx-no-comment-textnodes": "error",
  "react/no-comment-textnodes": "off",
  "react/no-render-return-value": "error",
  "react/require-optimization": [
    "off",
    {
      "allowDecorators": []
    }
  ],
  "react/no-find-dom-node": "error",
  "react/forbid-component-props": [
    "off",
    {
      "forbid": []
    }
  ],
  "react/no-danger-with-children": "error",
  "react/no-unused-prop-types": [
    "off",
    {
      "customValidators": [],
      "skipShapeProps": true
    }
  ],
  "react/style-prop-object": "error",
  "react/no-unescaped-entities": "off",
  "react/no-children-prop": "error",
  "react/jsx-tag-spacing": [
    "off",
    {
      "closingSlash": "never",
      "beforeSelfClosing": "always",
      "afterOpening": "never"
    }
  ],
  "react/no-array-index-key": "off",
  "react/require-default-props": "off",
  "jsx-a11y/anchor-has-content": [
    "error",
    {
      "components": [""]
    }
  ],
  "jsx-a11y/aria-role": "error",
  "jsx-a11y/aria-props": "error",
  "jsx-a11y/aria-proptypes": "error",
  "jsx-a11y/aria-unsupported-elements": "error",
  "jsx-a11y/href-no-hash": [
    "error",
    {
      "components": ["a"]
    }
  ],
  "jsx-a11y/img-has-alt": "error",
  "jsx-a11y/img-redundant-alt": "error",
  "jsx-a11y/label-has-for": [
    "error",
    {
      "components": ["label"]
    }
  ],
  "jsx-a11y/mouse-events-have-key-events": "off",
  "jsx-a11y/no-access-key": "error",
  "jsx-a11y/no-onchange": "off",
  "jsx-a11y/onclick-has-focus": "off",
  "jsx-a11y/onclick-has-role": "off",
  "jsx-a11y/role-has-required-aria-props": "error",
  "jsx-a11y/role-supports-aria-props": "error",
  "jsx-a11y/tabindex-no-positive": "error",
  "jsx-a11y/heading-has-content": [
    "error",
    {
      "components": [""]
    }
  ],
  "jsx-a11y/html-has-lang": "error",
  "jsx-a11y/lang": "error",
  "jsx-a11y/scope": "error",
  "jsx-a11y/click-events-have-key-events": "off",
  "jsx-a11y/no-static-element-interactions": "error",
  "prop-types": "off"
}
